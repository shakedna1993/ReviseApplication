@model ReviseApplication.Models.Requirements
@{
    ViewBag.Title = "Requirements";
    Layout = "~/Views/Shared/my_layout2.cshtml";
}

<body>
    <table class="table">
        <tr class="active">
            <th>
                @Html.LabelFor(model => model.Req, htmlAttributes: new { @class = "control-label col-md-2" })
            </th>
            <th>
                1
            </th>
            <th>
                2
            </th>
            <th>
                3
            </th>
            <th>
                4
            </th>
            <th>
                5
            </th>
        </tr>
        @foreach (var item in Model.Req)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.reqName, new { @class = "onclick", id = "Req" })
                </td>
                <td>
                    @Html.CheckBox("my option", new { @class = "radio", value = "1", name = item.reqId })
                </td>
                <td>
                    @Html.CheckBox("my option", new { @class = "radio", value = "1", name = item.reqId })
                </td>
                <td>
                    @Html.CheckBox("my option", new { @class = "radio", value = "1", name = item.reqId })
                </td>
                <td>
                    @Html.CheckBox("my option", new { @class = "radio", value = "1", name = item.reqId })
                </td>
                <td>
                    @Html.CheckBox("my option", new { @class = "radio", value = "1", name = item.reqId })
                </td>
            </tr>
        }
    </table>
</body>

<script>
    // the selector will match all input controls of type :checkbox
    // and attach a click event handler 
    $("input:checkbox").on('click', function () {
        // in the handler, 'this' refers to the box clicked on
        var $box = $(this);
        if ($box.is(":checked")) {
            // the name of the box is retrieved using the .attr() method
            // as it is assumed and expected to be immutable
            var group = "input:checkbox[name='" + $box.attr("name") + "']";
            // the checked state of the group/box on the other hand will change
            // and the current value is retrieved using .prop() method
            $(group).prop("checked", false);
            $box.prop("checked", true);
        } else {
            $box.prop("checked", false);
        }
    });
</script>