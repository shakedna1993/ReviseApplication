@model ReviseApplication.Models.ResetPasswordModel

@{
    Layout = "~/Views/Shared/empty_layout.cshtml";
    ViewBag.Title = "ResetPassword";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Reset Password - Revise Application</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>

    <!-- Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <style>
        body {
            background-color: #E8E8E8;
        }

        .panel-heading {
            padding: 5px 15px;
        }

        .profile-img {
            height: 95px;
            margin: 0 auto 10px;
            display: block;
            -moz-border-radius: 40%;
            -webkit-border-radius: 40%;
            border-radius: 40%;
        }
    </style>
</head>
<body>
</body>
</html>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container" ng-controller="mainController">
        <br />
        <br />
        <br />
        <br />
        <br />
        <div class="row">
            <div class="col-md-5 center-block">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <strong>Reset Password</strong>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="center-block">
                                <img class="profile-img" src="~/css/revise.jpg" />
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                        <div class="cols-sm-10">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>
                                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                        <div class="cols-sm-10">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.HiddenFor(a => a.ResetCode)
                                    </div>
                                    <div class="form-group">
                                        <input type="submit" value="Update" class="btn btn-success btn-lg btn-primary btn-block" />
                                    </div>
                                    <div class="text-success">
                                        @ViewBag.Message
                                    </div>
                                    <br />
                                    <div>
                                        @Html.ActionLink("Go back to Sign in", "Login", "Authentication")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}



@*@model ReviseApplication.Models.ResetPasswordModel
    @{
        ViewBag.Title = "ResetPassword";
    }

    <h2>Reset Password</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="text-danger">
                @ViewBag.Message
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.HiddenFor(a => a.ResetCode)
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back", "Login", "Authentication")
    </div>
    @section Scripts{
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    }
*@