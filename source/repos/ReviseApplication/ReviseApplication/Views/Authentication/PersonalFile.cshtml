@model ReviseApplication.Models.UserRegestration

@{
    Layout = "~/Views/Shared/empty_layout.cshtml";
    ViewBag.Title = "Personal File";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="~/css/bootstrap.css" rel="stylesheet" />
    <!-- Website CSS style -->
    <link href="~/css/main.css" rel="stylesheet" />
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <!-- Website Font style -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">
    <!-- Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

    <!-- Google Fonts -->
    <link href='https://fonts.googleapis.com/css?family=Passion+One' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Oxygen' rel='stylesheet' type='text/css'>

    <title>Personal File - Revise Application</title>
    <style>
        body {
            background-color: #E8E8E8;
        }

        .panel-heading {
            padding: 5px 15px;
        }

        .panel-footer {
            padding: 1px 15px;
            color: #A0A0A0;
        }

        .profile-img {
            height: 95px;
            margin: 0 auto 10px;
            display: block;
            -moz-border-radius: 40%;
            -webkit-border-radius: 40%;
            border-radius: 40%;
        }
    </style>
</head>
<body>


    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Success!</strong>@ViewBag.Message
            </div>
        }
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <br />
            <br />

            <div class="container" ng-controller="mainController">
                <div class="row">
                    <div class="col-md-4 center-block">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <strong>Personal File</strong>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="center-block">
                                        <img class="profile-img" src="~/css/revise.jpg" />
                                    </div>
                                </div>
                                <div class="main-login main-center">
                                    <form id="register-form" method="post" role="form" ng-show="registered" ng-submit="register()">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-key"></i></span>
                                                    @Html.DisplayFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" ,disabled = "disabled", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-users" aria-hidden="true"></i></span>
                                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-users" aria-hidden="true"></i></span>
                                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label cols-sm-2 " })

                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-user" aria-hidden="true"></i></span>
                                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Phonenum, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-phone-square" aria-hidden="true"></i></span>
                                                    @Html.EditorFor(model => model.Phonenum, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Phonenum, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-envelope fa" aria-hidden="true"></i></span>
                                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label cols-sm-2 " })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-birthday-cake" aria-hidden="true"></i></span>
                                                    @Html.DisplayFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" ,disabled = "disabled", @readonly = "readonly" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.pic, htmlAttributes: new { @class = "control-label cols-sm-2" })
                                            <div class="cols-sm-10">
                                                <div class="input-group">
                                                    <span class="input-group-addon"><i class="fa fa-picture-o" aria-hidden="true"></i></span>
                                                    @Html.EditorFor(model => model.pic, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.pic, "", new { @class = "text-danger" })
                                                </div>
                                                *Leave empty to get default picture.
                                            </div>
                                        </div>
                                        <div class="form-group ">
                                            <input type="submit" value="Save Changes" class="btn btn-primary btn-lg btn-block login-button" />
                                        </div>
                                        <div>
                                            @Html.ActionLink("Home", "ProjectMain", "Project")
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            if (ViewBag.Message != null)
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong>@ViewBag.Message
                </div>
            }
        }
    }

    @section Scripts{
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    }

</body>
</html>
